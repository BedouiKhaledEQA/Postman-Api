name: Run Postman Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  postman-tests:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Vérification du code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Installer Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    # Étape 3 : Installer Newman
    - name: Install Newman
      run: npm install -g newman newman-reporter-htmlextra

    # Étape 4 : Installer json-server
    - name: Install JSON Server
      run: npm install -g json-server

    # Étape 5 : Démarrer JSON Server
    - name: Start JSON Server
      run: |
        json-server db.json --port 3000 & # Démarrage de JSON Server en arrière-plan
        sleep 5 # Attendre que le serveur soit opérationnel

    # Étape 6 : Exécuter la collection Postman
    - name: Run Postman Collection
      run: |
        mkdir -p newman-reports
        newman run collection.json \
        --environment local.json \
        --reporters cli,htmlextra \
        --reporter-htmlextra-export newman-reports/newman-report.html

    # Étape 7 : Sauvegarder le rapport HTML comme artefact
    - name: Upload HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: newman-report
        path: newman-reports/newman-report.html

    # Étape 8 : Déployer le rapport HTML sur GitHub Pages
    - name: Deploy report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.APITOKEN }} # Ton token GitHub
        publish_branch: gh-pages
        publish_dir: newman-reports # Répertoire contenant le rapport HTML
